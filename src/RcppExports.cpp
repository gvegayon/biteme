// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// simulate_dyad
std::vector< std::vector< double > > simulate_dyad(NumericVector rates, NumericVector mimicry, double meal_length, int maxiter);
RcppExport SEXP _biteme_simulate_dyad(SEXP ratesSEXP, SEXP mimicrySEXP, SEXP meal_lengthSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type rates(ratesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mimicry(mimicrySEXP);
    Rcpp::traits::input_parameter< double >::type meal_length(meal_lengthSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_dyad(rates, mimicry, meal_length, maxiter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_biteme_simulate_dyad", (DL_FUNC) &_biteme_simulate_dyad, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_biteme(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
